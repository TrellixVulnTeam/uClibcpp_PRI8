#ifndef __INCLUDED_49E1667A5B9C11E6AA6EA088B4D1658C
#define __INCLUDED_49E1667A5B9C11E6AA6EA088B4D1658C

namespace std{

#pragma GCC visibility push(default)

//typedef basic_string<char> string;

class _UCXXEXPORT logic_error : public exception {
protected:
  string mstring;
public:
  logic_error() throw();
  logic_error(const string& what_arg);

  virtual ~logic_error() throw() {}
  virtual const char * what() const throw();

};

class _UCXXEXPORT domain_error : public logic_error {
public:
  domain_error() : logic_error() {}
  domain_error(const string& what_arg) : logic_error(what_arg) {}
  virtual ~domain_error() throw() {}
};

class _UCXXEXPORT invalid_argument : public logic_error {
public:
  invalid_argument() : logic_error(){}
  invalid_argument(const string& what_arg) : logic_error(what_arg){}
  virtual ~invalid_argument() throw() {}
};

class _UCXXEXPORT length_error : public logic_error {
public:
  length_error() : logic_error(){}
  length_error(const string& what_arg) : logic_error(what_arg){}
  virtual ~length_error() throw() {}
};

class _UCXXEXPORT out_of_range : public logic_error{
public:
  out_of_range();
  out_of_range(const string & what_arg);
  virtual ~out_of_range() throw() {}

};

class _UCXXEXPORT runtime_error : public exception{
protected:
  string mstring;
public:
  runtime_error();
  runtime_error(const string& what_arg);

  virtual ~runtime_error() throw() {}
  virtual const char * what() const throw();
};

class _UCXXEXPORT range_error : public runtime_error{
public:
  range_error() : runtime_error(){}
  range_error(const string& what_arg) : runtime_error(what_arg) {}
  virtual ~range_error() throw(){ }
};


class _UCXXEXPORT overflow_error : public runtime_error{
public:
  overflow_error() : runtime_error(){}
  overflow_error(const string& what_arg) : runtime_error(what_arg) {}
  virtual ~overflow_error() throw(){}
};

class _UCXXEXPORT underflow_error : public runtime_error{
public:
  underflow_error() : runtime_error(){}
  underflow_error(const string& what_arg) : runtime_error(what_arg) {}
  virtual ~underflow_error() throw(){}
};


#pragma GCC visibility pop

}

#endif // __INCLUDED_49E1667A5B9C11E6AA6EA088B4D1658C
